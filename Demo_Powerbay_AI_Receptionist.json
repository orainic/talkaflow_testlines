{
  "name": "Demo_Powerbay_AI_Receptionist",
  "nodes": [
    {
      "parameters": {
        "respondWith": "text",
        "responseBody": "={{ $node[\"Prepare Response\"].json[\"twiml\"]}}",
        "options": {
          "responseCode": 200,
          "responseHeaders": {
            "entries": [
              {
                "name": "Content-Type",
                "value": "text/xml; charset=UTF-8"
              }
            ]
          }
        }
      },
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.4,
      "position": [
        912,
        320
      ],
      "id": "56559dc6-1a83-4a93-9b20-6067d66de1a2",
      "name": "Respond to Webhook"
    },
    {
      "parameters": {
        "jsCode": "// Prepare TwiML response for Twilio\nconst joinUrl      = $input.first().json.joinUrl\nconst callSid      = $('Inbound Webhook').first().json.body.CallSid\nconst callerNumber = $('Inbound Webhook').first().json.body.Caller\n\n// Check if we have a valid joinUrl\nif (joinUrl && joinUrl.length > 0) {\n  // Create TwiML with Ultravox connection\n  const twiml = `<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<Response>\n  <Connect>\n    <Stream url=\"${joinUrl}\">\n      <Parameter name=\"customerId\" value=\"${callerNumber}\"/>\n      <Parameter name=\"callSid\"  value=\"${callSid}\"/>\n    </Stream>\n  </Connect>\n</Response>`;\n\n  return {\n    json: {\n      twiml\n    }\n  };\n} else {\n  // Fallback TwiML if no joinUrl available\n  const twiml = `<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<Response>\n  <Say>We're sorry, but our voice assistant is unavailable at the\n  moment. Please try again later.</Say>\n</Response>`;\n\n  return {\n    json: {\n      twiml\n    }\n  };\n}\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        608,
        320
      ],
      "id": "77f0672a-c976-4a04-87d5-3e503c2571f9",
      "name": "Prepare Response"
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "Powerbay-Inbound",
        "responseMode": "responseNode",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        -16,
        320
      ],
      "id": "84b34657-2666-4a4d-b60f-85fc6f631625",
      "name": "Inbound Webhook",
      "webhookId": "5ede15fb-05d9-4ae4-889b-7d12a4725b74"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.ultravox.ai/api/agents/d92f1c3b-1ee3-4ff5-86c9-ebe18b5b3bcd/calls",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"medium\": { \n    \"twilio\": {} \n  },\n  \"templateContext\": {\n    \"now\": \"{{$now.toString()}}\"\n  }\n} ",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        304,
        320
      ],
      "id": "c9b3a2ec-d64b-41a1-a196-53a3263c080b",
      "name": "Create Ultravox Call",
      "credentials": {
        "httpHeaderAuth": {
          "id": "YDZsHjnYNe6q0nk7",
          "name": "Ultravox"
        }
      }
    },
    {
      "parameters": {
        "operation": "appendOrUpdate",
        "documentId": {
          "__rl": true,
          "value": "1xvibT62fLxwMhiKYT9dCKFqPgPz4Zjq8SU35z9Q0wuc",
          "mode": "list",
          "cachedResultName": "Powerbay Call History",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1xvibT62fLxwMhiKYT9dCKFqPgPz4Zjq8SU35z9Q0wuc/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "Log",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1xvibT62fLxwMhiKYT9dCKFqPgPz4Zjq8SU35z9Q0wuc/edit#gid=0"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "Date Time": "={{ $now.toString() }}",
            "Phone Number": "={{ \"'\" +$node[\"Inbound Webhook\"].json[\"body\"][\"Caller\"] }}",
            "Voice Call ID": "={{ $node['Create Ultravox Call'].json.callId }}",
            "SIP CallSid": "={{ $node[\"Inbound Webhook\"].json[\"body\"][\"CallSid\"] }}"
          },
          "matchingColumns": [
            "Voice Call ID"
          ],
          "schema": [
            {
              "id": "SIP CallSid",
              "displayName": "SIP CallSid",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Voice Call ID",
              "displayName": "Voice Call ID",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Date Time",
              "displayName": "Date Time",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Phone Number",
              "displayName": "Phone Number",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Call Duration",
              "displayName": "Call Duration",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "Billed Duration",
              "displayName": "Billed Duration",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "Client Name",
              "displayName": "Client Name",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "Transcript",
              "displayName": "Transcript",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "Summary",
              "displayName": "Summary",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "Tag",
              "displayName": "Tag",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.6,
      "position": [
        1200,
        320
      ],
      "id": "3d32d392-e3c4-416a-b996-11f3b5709ed8",
      "name": "Append Call Details to Sheets",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "yJR81ExsvadPy5X6",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "Ultravox-CallEnded",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        -16,
        864
      ],
      "id": "e399892c-d5b4-42d7-aa4e-986cce05044c",
      "name": "CallEnded Webhook",
      "webhookId": "b206bc3e-8549-4e3a-8a4b-53c72dc1e7d5"
    },
    {
      "parameters": {
        "jsCode": "// Access the array of messages from the previous node (e.g. from List Call Messages)\nconst messages = $json.results || $json.messages || [];\n\n// Build an array of conversational lines\nconst formattedLines = messages.reduce((acc, msg) => {\n  // Determine the speaker. Adjust the mapping as necessary\n  let speakerLabel;\n  if (msg.role && msg.role.toLowerCase().includes('agent')) {\n    speakerLabel = 'AI agent';\n  } else if (msg.role && msg.role.toLowerCase().includes('user')) {\n    speakerLabel = 'User';\n  } else {\n    // Skip or label other message types (e.g. tool calls) if desired\n    return acc;\n  }\n  \n  // Push the formatted line into the array\n  acc.push(`${speakerLabel}: ${msg.text}`);\n  return acc;\n}, []);\n\n// Join the lines with line breaks to produce the final transcript string\nconst formattedTranscript = formattedLines.join('\\n');\n\n// Return the result so it can be used by the next node (e.g. to write to Google Sheets)\nreturn [\n  {\n    formattedTranscript: formattedTranscript,\n  },\n];"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        512,
        688
      ],
      "id": "f46bc6ad-053d-4605-8ef7-67c1933fdeed",
      "name": "Extract Full Transcript"
    },
    {
      "parameters": {
        "url": "=https://api.ultravox.ai/api/calls/{{$json.body.call.callId}}/messages",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        288,
        688
      ],
      "id": "e8e84deb-9dde-4240-9ee9-55ca0d641ad4",
      "name": "Get Transcript",
      "credentials": {
        "httpHeaderAuth": {
          "id": "YDZsHjnYNe6q0nk7",
          "name": "Ultravox"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=From the following phone call transcript, extract the caller’s first name.  \nReturn your answer as JSON format with the keys “callerName”\nTranscript:\n{{ $json.formattedTranscript }}",
        "hasOutputParser": true,
        "batching": {}
      },
      "type": "@n8n/n8n-nodes-langchain.chainLlm",
      "typeVersion": 1.7,
      "position": [
        784,
        688
      ],
      "id": "c290368c-391b-4da1-a49f-faf9cc2e9523",
      "name": "Extract Name"
    },
    {
      "parameters": {
        "jsonSchemaExample": "{\n\t\"callerName\": \"Name\"\n}"
      },
      "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
      "typeVersion": 1.3,
      "position": [
        1008,
        912
      ],
      "id": "1c3904b3-f30f-4dde-80f0-083a48f9f610",
      "name": "Structured Output Parser"
    },
    {
      "parameters": {
        "operation": "update",
        "documentId": {
          "__rl": true,
          "value": "1xvibT62fLxwMhiKYT9dCKFqPgPz4Zjq8SU35z9Q0wuc",
          "mode": "list",
          "cachedResultName": "Powerbay Call History",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1xvibT62fLxwMhiKYT9dCKFqPgPz4Zjq8SU35z9Q0wuc/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "Log",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1xvibT62fLxwMhiKYT9dCKFqPgPz4Zjq8SU35z9Q0wuc/edit#gid=0"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "Client Name": "={{ $node[\"Extract Name\"].json.output.callerName }}",
            "Transcript": "={{ $node[\"Extract Full Transcript\"].json.formattedTranscript }}",
            "Voice Call ID": "={{ $node[\"CallEnded Webhook\"].json.body.call.callId }}"
          },
          "matchingColumns": [
            "Voice Call ID"
          ],
          "schema": [
            {
              "id": "SIP CallSid",
              "displayName": "SIP CallSid",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "Voice Call ID",
              "displayName": "Voice Call ID",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Date Time",
              "displayName": "Date Time",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "Phone Number",
              "displayName": "Phone Number",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "Call Duration",
              "displayName": "Call Duration",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "Billed Duration",
              "displayName": "Billed Duration",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "Client Name",
              "displayName": "Client Name",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Transcript",
              "displayName": "Transcript",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Summary",
              "displayName": "Summary",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "Tag",
              "displayName": "Tag",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "row_number",
              "displayName": "row_number",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "readOnly": true,
              "removed": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.6,
      "position": [
        1200,
        688
      ],
      "id": "0a7240c5-cfa4-4095-ad64-8108d7270dd9",
      "name": "Update Call Details to Sheets",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "yJR81ExsvadPy5X6",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "url": "=https://api.ultravox.ai/api/calls/{{$json.body.call.callId}}",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        288,
        1088
      ],
      "id": "c76d8eb5-8398-408b-8a87-18d41d01233a",
      "name": "Get Summary",
      "credentials": {
        "httpHeaderAuth": {
          "id": "YDZsHjnYNe6q0nk7",
          "name": "Ultravox"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "documentId": {
          "__rl": true,
          "value": "1xvibT62fLxwMhiKYT9dCKFqPgPz4Zjq8SU35z9Q0wuc",
          "mode": "list",
          "cachedResultName": "Powerbay Call History",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1xvibT62fLxwMhiKYT9dCKFqPgPz4Zjq8SU35z9Q0wuc/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "Log",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1xvibT62fLxwMhiKYT9dCKFqPgPz4Zjq8SU35z9Q0wuc/edit#gid=0"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "Summary": "={{ $node[\"Get Summary\"].json.summary }}",
            "Voice Call ID": "={{ $node[\"CallEnded Webhook\"].json.body.call.callId }}",
            "Tag": "={{ $json.output.Tag }}",
            "Call Duration": "={{ $('Extract Call Duration').item.json.duration }}",
            "Billed Duration": "={{ $('Extract Call Duration').item.json.billedDuration }}"
          },
          "matchingColumns": [
            "Voice Call ID"
          ],
          "schema": [
            {
              "id": "SIP CallSid",
              "displayName": "SIP CallSid",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "Voice Call ID",
              "displayName": "Voice Call ID",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Date Time",
              "displayName": "Date Time",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "Phone Number",
              "displayName": "Phone Number",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "Call Duration",
              "displayName": "Call Duration",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Billed Duration",
              "displayName": "Billed Duration",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Client Name",
              "displayName": "Client Name",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "Transcript",
              "displayName": "Transcript",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "Summary",
              "displayName": "Summary",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Tag",
              "displayName": "Tag",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "row_number",
              "displayName": "row_number",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "readOnly": true,
              "removed": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.6,
      "position": [
        1200,
        1088
      ],
      "id": "c6554faf-e7ab-428b-85f0-b197ed6a84fe",
      "name": "Add Summary to Sheets",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "yJR81ExsvadPy5X6",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "jsonSchemaExample": "{\n\t\"Tag\": \"Category\"\n}"
      },
      "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
      "typeVersion": 1.3,
      "position": [
        960,
        1312
      ],
      "id": "ca09a5bc-caa7-4205-98b6-f886b2184d89",
      "name": "Structured Output Parser1"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "gpt-4.1",
          "mode": "list",
          "cachedResultName": "gpt-4.1"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        768,
        912
      ],
      "id": "400688ee-ae36-4b49-94a4-13aad135c002",
      "name": "OpenAI Chat 4.1",
      "credentials": {
        "openAiApi": {
          "id": "rRkvXjGKYJgZP1Sd",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "gpt-4.1",
          "mode": "list",
          "cachedResultName": "gpt-4.1"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        720,
        1312
      ],
      "id": "4499c9be-112a-451d-ac4e-192327afc71a",
      "name": "OpenAI Chat Model",
      "credentials": {
        "openAiApi": {
          "id": "rRkvXjGKYJgZP1Sd",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=From the following phone call summary, categorise the intent of the call into one or more of the following categories: Product Tracking, Product Information Inquiry, Technical Support, Compliance, Sales Leads, etc.\nProvide your answer in JSON format with the key \"Tag\".\nTranscript:\n{{ $('Get Summary').item.json.summary }}",
        "hasOutputParser": true,
        "batching": {}
      },
      "type": "@n8n/n8n-nodes-langchain.chainLlm",
      "typeVersion": 1.7,
      "position": [
        768,
        1088
      ],
      "id": "eb2a116a-0303-4cef-9324-efcda029074f",
      "name": "Extract Category"
    },
    {
      "parameters": {
        "jsCode": "const joined   = new Date($input.first().json.joined).getTime();\nconst ended    = new Date($input.first().json.ended).getTime();\nconst duration = Math.round((ended - joined) / 1000);   // seconds\nreturn [{ duration, billedDuration: $input.first().json.billedDuration }];"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        528,
        1088
      ],
      "id": "aea55aaa-dd8c-445b-8c59-336df4b39e4e",
      "name": "Extract Call Duration"
    }
  ],
  "pinData": {
    "CallEnded Webhook": [
      {
        "json": {
          "headers": {
            "host": "orainic.app.n8n.cloud",
            "user-agent": "python-httpx/0.28.1",
            "content-length": "4797",
            "accept": "*/*",
            "accept-encoding": "gzip, br",
            "cdn-loop": "cloudflare; loops=1; subreqs=1",
            "cf-connecting-ip": "2600:1900:0:2d01::2400",
            "cf-ew-via": "15",
            "cf-ipcountry": "IL",
            "cf-ray": "964c3cdca20cfa27-ORD",
            "cf-visitor": "{\"scheme\":\"https\"}",
            "cf-worker": "n8n.cloud",
            "content-type": "application/json",
            "x-b3-sampled": "1",
            "x-b3-spanid": "a048ee75bb6abd6c",
            "x-b3-traceid": "b4f4ee0f05af459a902e2ae9709dac7c",
            "x-forwarded-for": "2600:1900:0:2d01::2400, 172.70.130.247",
            "x-forwarded-host": "orainic.app.n8n.cloud",
            "x-forwarded-port": "443",
            "x-forwarded-proto": "https",
            "x-forwarded-server": "traefik-prod-users-gwc-62-5647b57999-gmplj",
            "x-is-trusted": "yes",
            "x-real-ip": "2600:1900:0:2d01::2400",
            "x-ultravox-webhook-signature": "094b500d26c51c68f0809e904cd39def8f600b7714c2be61a42e904d9e8b5f5d",
            "x-ultravox-webhook-timestamp": "2025-07-25T14:09:54.595088+00:00"
          },
          "params": {},
          "query": {},
          "body": {
            "event": "call.ended",
            "call": {
              "callId": "ebaef8a0-7b83-4832-bbda-9b04375cc79f",
              "clientVersion": "phone(api_v1)",
              "created": "2025-07-25T14:09:22.692900Z",
              "joined": "2025-07-25T14:09:24.892769Z",
              "ended": "2025-07-25T14:09:54.037426Z",
              "endReason": "agent_hangup",
              "billedDuration": "30s",
              "firstSpeaker": "FIRST_SPEAKER_AGENT",
              "firstSpeakerSettings": {
                "agent": {
                  "prompt": "(New Call) Respond as if you are answering the phone."
                }
              },
              "inactivityMessages": [],
              "initialOutputMedium": "MESSAGE_MEDIUM_VOICE",
              "joinTimeout": "30s",
              "joinUrl": null,
              "languageHint": null,
              "maxDuration": "3600s",
              "medium": {
                "twilio": {}
              },
              "model": "fixie-ai/ultravox",
              "recordingEnabled": false,
              "systemPrompt": "The current time and date are 2025-07-26T00:09:22.310+10:00.\n\nYou have access to the [Powerbay FAQs & Policies] knowledge file. Use it to answer questions about product specifications,  warranty, and returns. Answer naturally without mentioning that you’re reading a file.\n\nRole: 24/7 AI customer‑service agent for Powerbay products\n\n\n### CRITICAL HOUSE RULES\nKnow the products. Powerbay specialises in high‑performance renewable energy products such as heat‑pump hot‑water systems, C&I battery storage, EV chargers, Solar Panel, Pool Pump, Large Format Battery, and Power Factor Corrector. Be ready to describe key features (e.g., energy efficiency, capacity) without guessing; always consult the knowledge file.\n\nTone: Warm, attentive, friendly, knowledgeable, polite and reassuring.\nSpeaking Style: Neutral Aussie‑English accent with light Australian touches.\n\nIf a question is beyond your scope, apologise, acknowledge the limitation and offer to connect the caller with a Powerbay representative or Bunnings customer support.\n\nBehavioural Guidelines:\nPause naturally between steps for the caller’s response.\nConfirm details before taking any action.\nDe‑escalate stress with empathy.\nAlways validate and paraphrase the patient’s concern.\nNever sound rushed — prioritise trust and comfort.\n\n1. GREETING\nIntent: greeting\nPrompt: “Good ! Thank you for contacting Powerbay. You’re speaking with , your virtual assistant. How may I assist you today?”\nCaller goals → route:\n\n\n2.2 PROVIDE DETAILS\nUse GetProductInfo to retrieve specifications, energy‑efficiency ratings and compatibility.\nHighlight benefits (e.g., the Gen II heat pump captures heat from the surrounding air to provide cost‑effective hot water\npowerbay.com.au).\n\n\n5. TECHNICAL_SUPPORT\n5.1 UNDERSTAND THE ISSUE\nAsk the customer to describe the technical problem or installation question. Note the product model and installation environment.\n\n5.2 BASIC TROUBLESHOOTING\nProvide steps from the knowledge file (e.g., resetting the system, checking power supply). \n\n5.3 ESCALATION\nIf the problem is beyond the assistant’s scope, apologise and offer to transfer the call or arrange a callback from a technical specialist.\n\n6. MISCELLANEOUS\nHandle general enquiries, complaints or feedback politely and concisely. For complaints, acknowledge the issue, express empathy, and offer to record the concern for follow‑up by the appropriate department.\n\n7. CLOSING\nIntent: closing\nPrompt: “Thank you for contacting Powerbay. Is there anything else I can assist you with? We appreciate your interest in our renewable energy solutions and hope you have a great day.”\n\n\n9. GUIDELINES (RECAP)\nAlways reference the knowledge file for product facts; avoid guessing.\nUse a warm, professional tone; pause for the customer to respond; confirm details before proceeding.\nIf uncertain, apologise and seek support from Powerbay",
              "temperature": 0.2,
              "timeExceededMessage": null,
              "voice": null,
              "transcriptOptional": true,
              "errorCount": 0,
              "vadSettings": null,
              "shortSummary": "The caller inquired about Powerbay's products and decided to call back later.",
              "summary": "The caller contacted Powerbay and was greeted by the virtual assistant, who offered to assist with any questions or concerns. The caller asked about Powerbay's products, and the assistant provided a brief overview of the company's range of renewable energy solutions. The caller then decided to call back later, and the call was ended. The conversation was brief and did not require any further assistance or resolution.",
              "experimentalSettings": null,
              "metadata": {
                "ultravox.twilio.call_sid": "CA231bda43561144d9c86e0ac1057c044c",
                "ultravox.twilio.stream_sid": "MZ7cdf982adc67edbf3d9a42797b2a4f1e",
                "ultravox.twilio.account_sid": "REDACTED"
              },
              "initialState": {},
              "requestContext": {
                "now": "2025-07-26T00:09:22.310+10:00"
              },
              "dataConnectionConfig": null
            }
          },
          "webhookUrl": "https://orainic.app.n8n.cloud/webhook/Ultravox-CallEnded",
          "executionMode": "production"
        }
      }
    ]
  },
  "connections": {
    "Prepare Response": {
      "main": [
        [
          {
            "node": "Respond to Webhook",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Respond to Webhook": {
      "main": [
        [
          {
            "node": "Append Call Details to Sheets",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Inbound Webhook": {
      "main": [
        [
          {
            "node": "Create Ultravox Call",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Create Ultravox Call": {
      "main": [
        [
          {
            "node": "Prepare Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "CallEnded Webhook": {
      "main": [
        [
          {
            "node": "Get Transcript",
            "type": "main",
            "index": 0
          },
          {
            "node": "Get Summary",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Transcript": {
      "main": [
        [
          {
            "node": "Extract Full Transcript",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Structured Output Parser": {
      "ai_outputParser": [
        [
          {
            "node": "Extract Name",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    },
    "Extract Name": {
      "main": [
        [
          {
            "node": "Update Call Details to Sheets",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Summary": {
      "main": [
        [
          {
            "node": "Extract Call Duration",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract Full Transcript": {
      "main": [
        [
          {
            "node": "Extract Name",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat 4.1": {
      "ai_languageModel": [
        [
          {
            "node": "Extract Name",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "Extract Category",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Structured Output Parser1": {
      "ai_outputParser": [
        [
          {
            "node": "Extract Category",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    },
    "Extract Category": {
      "main": [
        [
          {
            "node": "Add Summary to Sheets",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract Call Duration": {
      "main": [
        [
          {
            "node": "Extract Category",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": true,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "7cff5973-5a2c-46bc-aa16-6726573edc6d",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "103081d373997b7ee460f88dc127c97aa0ffb58ca86a5dce5a823011669aa9bd"
  },
  "id": "NuLJQfivu739NmnR",
  "tags": []
}